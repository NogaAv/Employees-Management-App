server.port=8080
# '?createDatabaseIfNotExist=true'  -> this str is appended for creating the database if not exist
spring.datasource.url=jdbc:mysql://localhost:3306/EmployeesDB?createDatabaseIfNotExist=true
spring.datasource.username=noga
spring.datasource.password=12345678

#note: if we replace 'update' with create, then when we rerun the app, all data in the existing db will be overwritten!
#ddl - that means the creation of tables and database, i.e- the schema/structure. Not queries or any inner data

#Hibernate property values are: create, update, create-drop, validate and none:
#create ? Hibernate first drops existing tables, then creates new tables
#update ? the object model created based on the mappings (annotations or XML) is compared with the existing schema, and then Hibernate updates the schema according to the diff. It never deletes the existing tables or columns even if they are no more required by the application
#create-drop ? similar to create, with the addition that Hibernate will drop the database after all operations are completed. Typically used for unit testing
#validate ? Hibernate only validates whether the tables and columns exist, otherwise it throws an exception
#none ? this value effectively turns off the DDL generation

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
spring.jpa.generate-ddl=true

#spring.jpa.hibernate.ddl-auto = create
spring.jpa.hibernate.ddl-auto = update